@use "sass:math";
@import '../theme';

.label {
  display: block;
  position: relative;
  border-radius: $radius3;
  padding: $space2;
  box-sizing: border-box;
  cursor: text;
  background-image: radial-gradient(
    50% 135% at 50% 0%,
    rgba($white, 0.15) 0%,
    rgba($white, 0.05) 100%
  );

  &:not(:last-child),
  & ~ :not(.invalidText--active) {
    margin-bottom: $space1;
  }

  .text {
    font-size: math.div(12, 16) + rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    display: block;
    color: $foregroundInverted2;
    margin-bottom: 0.5em;
    font-weight: bold;
    transition: 0.3s;
  }

  .caret {
    width: 20px;
    height: 3px;
    position: absolute;
    bottom: $space2;
    left: $space2;
    pointer-events: none;

    animation: flash 2s infinite;
    @keyframes flash {
      0%,
      30%,
      100% {
        opacity: 0;
      }

      40%,
      70% {
        opacity: 1;
      }
    }

    &.caretHidden {
      transition: 1s;
      animation: hide 5s both;

      @keyframes hide {
        0% {
          opacity: 1;
        }

        30% {
          opacity: 0.5;
          transform: scale(20) translate(-30px, 30px) rotate(90deg);
        }

        100% {
          opacity: 0;
          transform: scale(20) translate(-30px, 30px) rotate(90deg);
        }
      }
    }

    &:before {
      content: '';
      background-color: $foregroundInverted1;
      display: block;
      position: relative;
      z-index: 2;
      width: inherit;
      height: inherit;
    }

    &:after {
      content: '';
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 200px;
      height: 100px;
      position: absolute;
      @include glow;
      border-radius: 20px;
    }
  }

  .clip {
    overflow: hidden;
    -webkit-mask-image: -webkit-radial-gradient(white, black);
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    border-radius: $radius3;
  }

  .valid {
    height: 20px;
    width: 20px;
    position: absolute;
    top: $space1;
    right: $space1;

    opacity: 0;
    transition: 0.5s;

    &.active {
      opacity: 1;
    }

    > div {
      overflow: hidden;
      -webkit-mask-image: -webkit-radial-gradient(white, black);
      border-radius: 100px;
      background-color: rgba($white, 0.1);
      width: 20px;
      height: 20px;
      position: relative;
      z-index: 2;

      > svg {
        width: 20px;
        position: absolute;
        display: block;
        left: 4px;
        top: -1px;
        color: $white;
      }
    }

    &:after {
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 250px;
      height: 250px;
      @include validGlow;
    }
  }

  .invalid {
    height: 200px;
    pointer-events: none;
    width: 450px;
    position: absolute;
    bottom: 0;
    left: 0;
    opacity: 0;
    transition: 0.5s;

    &.active {
      opacity: 1;
    }

    @include invalidGlow;
  }

  &.disabled {
    color: $foreground1;
    background-color: $foregroundInverted3;
    pointer-events: none;

    .valid,
    .invalid {
      opacity: 0;
    }

    .text,
    .input {
      color: $foreground1;
    }
  }
}

.invalidText {
  display: none;
  font-size: math.div(13, 16) + rem;
  color: $error;
  padding: 0 $space2;

  &.isActive {
    display: block;
    animation: fadeIn 1s 0.5s both cubic-bezier(0, 1, 0, 1);

    @keyframes fadeIn {
      0% {
        opacity: 0;
        height: 0;
        margin-bottom: 0;
        transform: translateY(-20px);
      }
      100% {
        opacity: 1;
        height: auto;
        transform: translateY(0);
      }
    }
  }
}

.input {
  background-color: transparent;
  color: $white;
  border: 0;
  width: 100%;
  font-size: math.div(20, 16) + rem;
  position: relative;
  z-index: 2;
  font-weight: bold;
  margin: -10px;
  padding: 10px;
  transition: 0.3s;

  &input[type='date']::before {
    width: 100%;
    content: attr(placeholder);
  }

  &:disabled {
    -webkit-text-fill-color: $foreground1;
    opacity: 1;
  }

  ~ .focus {
    @include focus;
  }

  &:focus {
    border: 0;
    outline: 0;

    & ~ .focus {
      opacity: 1;
    }
  }
}
